summary(quiz.total)
quiz.total <- (R1 + R2 + R3 + R4 + R5 + R7 + R8 +  R13 + Reng.surv + Rmid.surv + Rsem.rev)/(44*.8)
quiz.total[quiz.total > 1] <- 1
summary(quiz.total)
total <- 5*quiz.total + 5*class.part+ 20*hw.total + 0.2*Exam1 + 0.2*Exam2 + 0.3*Final + Extra.Credit
summary(total)
setwd("~/Dropbox/ISU/Teaching/Final_grades")
grades <- read.csv("bb.csv", sep=",", header = TRUE)
#construct class participation grade
setwd("~/Dropbox/ISU/Teaching/Admin")
class <- read.csv("groups.csv")
groups <- class[c("First.Name", "Last.Name", "Group")]
#remove white space from names so we can join groups with grades
library(stringr)
for (i in c("First.Name", "Last.Name")) {
groups[,i] <- str_trim(groups[,i])
grades[,i] <- str_trim(grades[,i])
}
library(plyr)
grades2 <- plyr::join(grades, groups, by=c("First.Name", "Last.Name"))
#everybody gets 100
grades2$class_participation <- 100
#these groups missed once
one <- c(25, 29, 21, 11, 13, 27)
for (i in one) {
grades2$class_participation[grades2$Group == i] <- 90
}
#twice
grades2$class_participation[grades2$Group == 28] <- 80
#three
grades2$class_participation[grades2$Group == 30] <- 70
#Lastly, calculate class participation (on decimal scale)
class.part <- (grades2[, grep("InClass1..", names(grades2), fixed=TRUE)] +
grades2[, grep("InClass2..", names(grades2), fixed=TRUE)] +
grades2$class_participation)/110
summary(class.part)
# rename columns and drop columns not needed --
drops <- c("InClass", "Group", "class_participation", "Delta.Survey", "Engagement.Survey.Sect.",
"Section.B.Only", "Sect.B.Only", "Sec.G.Exam.2.reflection.survey", "Exam.2.Reflection", "Podcast")
for (i in drops) {
grades2 <- grades2[,-grep(i, names(grades2))]
}
names(grades2)
#summary(grades2)
grades226 <- grades2
old.names <- names(grades226)
names(grades226) <- c('Last', 'First', 'netID', 'Sect', 'Sectnr', 'Exam1', 'Exam2', 'Final',
'H1o', 'H1w', 'H2o', 'H2w', 'H3o', 'H3w','H4o','H4w','H5o','H5w','H6o','H6w', 'H7o', 'H7w','H8o','H8w','H9w','H9o','H10w','H11o', 'H11w','H12o','H12w',
'R1','R2','R3','R4','R5','R7','R8','R13','Reng.surv','Rmid.surv', 'Rsem.rev','Extra.Credit')
new.names<-names(grades226)
#check that column names actually align
name.check<-cbind(old.names, new.names)
name.check
#grades226G<-subset(grades226, Sect =='S-G')
#grades226G
#should match your students + demo student if you kept the demo student
#dimG<-dim(grades226G)[1]
dimD <- dim(grades226)[1]
#HOMEWORK
#Drop lowest 2 homework scores based on percentages
attach(grades226)
hw1 <- (H1o+ H1w)/36
hw2 <- (H2o+ H2w)/55
hw3 <- (H3o +H3w)/48
hw4 <- (H4o + H4w)/48
hw5 <- (H5o + H5w)/30
hw6 <- (H6o + H6w)/56
hw7 <- (H7o +H7w)/48
hw8 <- (H8o + H8w)/33
hw9 <- (H9o + H9w)/46
hw10 <- (H10w)/40
hw11 <- (H11o + H11w)/75
hw12 <- (H12o + H12w)/20
hw <- cbind(hw1,hw2,hw3,hw4,hw5,hw6,hw7,hw8,hw9,hw10,hw11,hw12)
hw.total <- rep(0,dimD)
tsort <- rep(0,12)
for (i in 1:dimD) {
tsort <- sort(hw[i,])
#if (grades226G$Last[i]=="Richter") {   #for students that we made exceptions because of illness, athletes traveling, etc.
#  hw.total[i] <- sum(tsort[4:12])/9
#}
#else {
hw.total[i] <- sum(tsort[3:12])/10
#}
}
summary(hw.total)
#QUIZ 'R1','R2','R3','R4','R5','R7','R8','R13','Reng.surv','Rmid.surv','RE2.survGonly', 'Rsem.rev'; 11 quizes totals 44 possible points + 5 extra credit from semester review quiz
quiz.total <- (R1 + R2 + R3 + R4 + R5 + R7 + R8 +  R13 + Reng.surv + Rmid.surv + Rsem.rev)/(44*.8)
#quiz.total[grades226A$Last=="Knott"] <- quiz.total[grades226A$Last=="Knott"]*(48*.8)/(44*.8)
quiz.total[quiz.total > 1] <- 1
summary(quiz.total)
# for my section: each worth 5 pts, total of 16 one of which was extra credit
# class.part <- (grades226G$IC1+ grades226G$IC2+ grades226G$IC3+ grades226G$IC4+ grades226G$IC5+ grades226G$IC6+ grades226G$IC7+ grades226G$IC8+ grades226G$IC9+ grades226G$IC10+grades226G$IC11+ grades226G$IC12+ grades226G$IC13+ grades226G$IC14+ grades226G$IC15+ grades226G$IC16)/(75*.8)
# quiz.total[grades226$Last=="Knott"] <- quiz.total[grades226$Last=="Knott"]*(48*.8)/(44*.8)
# class.part[class.part > 1] <- 1
# summary(class.part)
#TOTAL
total <- 5*quiz.total + 5*class.part+ 20*hw.total + 0.2*Exam1 + 0.2*Exam2 + 0.3*Final + Extra.Credit
summary(total)
ord <- order(total, decreasing=T)
grade.matrix <- cbind(hw.total[ord], quiz.total[ord], class.part[ord],
Exam1[ord], Exam2[ord], Final[ord], total[ord],
Last.Name[ord], First.Name[ord])
grade.matrix <- cbind(hw.total[ord], quiz.total[ord], class.part[ord],
Exam1[ord], Exam2[ord], Final[ord], total[ord],
grades226$Last.Name[ord], grades226$First.Name[ord])
head(grade.matrix)
grade.matrix <- data.frame(HW=hw.total[ord], QUIZ=quiz.total[ord], PART=class.part[ord],
EXAM1=Exam1[ord], EXAM2=Exam2[ord], FINAL=Final[ord], TOTAL=total[ord],
FIRST=grades226$Last.Name[ord], LAST=grades226$First.Name[ord])
class.part[ord]
Exam1[ord]
setwd("~/Dropbox/ISU/Teaching/Final_grades")
grades <- read.csv("bb.csv", sep=",", header = TRUE)
#construct class participation grade
setwd("~/Dropbox/ISU/Teaching/Admin")
class <- read.csv("groups.csv")
groups <- class[c("First.Name", "Last.Name", "Group")]
#remove white space from names so we can join groups with grades
library(stringr)
for (i in c("First.Name", "Last.Name")) {
groups[,i] <- str_trim(groups[,i])
grades[,i] <- str_trim(grades[,i])
}
library(plyr)
grades2 <- plyr::join(grades, groups, by=c("First.Name", "Last.Name"))
#everybody gets 100
grades2$class_participation <- 100
#these groups missed once
one <- c(25, 29, 21, 11, 13, 27)
for (i in one) {
grades2$class_participation[grades2$Group == i] <- 90
}
#twice
grades2$class_participation[grades2$Group == 28] <- 80
#three
grades2$class_participation[grades2$Group == 30] <- 70
#Lastly, calculate class participation (on decimal scale)
class.part <- (grades2[, grep("InClass1..", names(grades2), fixed=TRUE)] +
grades2[, grep("InClass2..", names(grades2), fixed=TRUE)] +
grades2$class_participation)/110
summary(class.part)
# rename columns and drop columns not needed --
drops <- c("InClass", "Group", "class_participation", "Delta.Survey", "Engagement.Survey.Sect.",
"Section.B.Only", "Sect.B.Only", "Sec.G.Exam.2.reflection.survey", "Exam.2.Reflection", "Podcast")
for (i in drops) {
grades2 <- grades2[,-grep(i, names(grades2))]
}
names(grades2)
#summary(grades2)
grades226 <- grades2
old.names <- names(grades226)
names(grades226) <- c('Last', 'First', 'netID', 'Sect', 'Sectnr', 'Exam1', 'Exam2', 'Final',
'H1o', 'H1w', 'H2o', 'H2w', 'H3o', 'H3w','H4o','H4w','H5o','H5w','H6o','H6w', 'H7o', 'H7w','H8o','H8w','H9w','H9o','H10w','H11o', 'H11w','H12o','H12w',
'R1','R2','R3','R4','R5','R7','R8','R13','Reng.surv','Rmid.surv', 'Rsem.rev','Extra.Credit')
new.names<-names(grades226)
#check that column names actually align
name.check<-cbind(old.names, new.names)
name.check
#HOMEWORK
#Drop lowest 2 homework scores based on percentages
attach(grades226)
hw1 <- (H1o+ H1w)/36
hw2 <- (H2o+ H2w)/55
hw3 <- (H3o +H3w)/48
hw4 <- (H4o + H4w)/48
hw5 <- (H5o + H5w)/30
hw6 <- (H6o + H6w)/56
hw7 <- (H7o +H7w)/48
hw8 <- (H8o + H8w)/33
hw9 <- (H9o + H9w)/46
hw10 <- (H10w)/40
hw11 <- (H11o + H11w)/75
hw12 <- (H12o + H12w)/20
hw <- cbind(hw1,hw2,hw3,hw4,hw5,hw6,hw7,hw8,hw9,hw10,hw11,hw12)
hw.total <- rep(0,dimD)
tsort <- rep(0,12)
dimD <- dim(grades226)[1]
for (i in 1:dimD) {
tsort <- sort(hw[i,])
hw.total[i] <- sum(tsort[3:12])/10
}
summary(hw.total)
#QUIZ 'R1','R2','R3','R4','R5','R7','R8','R13','Reng.surv','Rmid.surv','RE2.survGonly', 'Rsem.rev'; 11 quizes totals 44 possible points + 5 extra credit from semester review quiz
quiz.total <- (R1 + R2 + R3 + R4 + R5 + R7 + R8 +  R13 + Reng.surv + Rmid.surv + Rsem.rev)/(44*.8)
quiz.total[quiz.total > 1] <- 1
summary(quiz.total)
#TOTAL
total <- 5*quiz.total + 5*class.part+ 20*hw.total + 0.2*Exam1 + 0.2*Exam2 + 0.3*Final + Extra.Credit
summary(total)
# order students by achievment
ord <- order(total, decreasing=T)
final.grades <- data.frame(HW=hw.total[ord], QUIZ=quiz.total[ord], PART=class.part[ord],
EXAM1=Exam1[ord], EXAM2=Exam2[ord], FINAL=Final[ord], TOTAL=total[ord],
FIRST=grades226$Last.Name[ord], LAST=grades226$First.Name[ord])
head(final.grades)
final.grades <- data.frame(HW=hw.total[ord], QUIZ=quiz.total[ord], PART=class.part[ord],
EXAM1=Exam1[ord], EXAM2=Exam2[ord], FINAL=Final[ord], TOTAL=total[ord],
FIRST=Last[ord], LAST=First[ord])
head(final.grades)
head(final.grades, 20)
write.csv(final.grades, row.names=FALSE)
write.csv(final.grades, "final_grades.csv", row.names=FALSE)
setwd("~/Dropbox/ISU/Teaching/Final_grades")
write.csv(final.grades, "final_grades.csv", row.names=FALSE)
library(xlsx)
write.xlsx(final.grades, "final_grades", row.names=FALSE)
write.xlsx(final.grades, "final_grades.xlsx", row.names=FALSE)
data(mtcars)
head(mtcars)
summary(mtcars)
library(devtools)
install_github('rCharts', 'ramnathv')
require(rCharts)
names(iris) = gsub("\\.", "", names(iris))
p1 <- rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = "Species",
type = "point")
p1$addParams(width = 550)
p1$printChart("chart1")
p1$show()
?rPlot
str(p1)
p1$print("chart1")
str(p1)
library(slidify)
?slidify
setwd("~/Desktop/stack/rChart")
slidify("2013-05-13-fun-with-rcharts.Rmd")
slidify("2013-05-13-fun-with-rcharts.Rmd")
slidify("2013-05-13-fun-with-rcharts.Rmd")
slidify("2013-05-13-fun-with-rcharts.Rmd")
slidify("2013-05-13-fun-with-rcharts.Rmd")
.packages(TRUE)
?render_jekyll
list.files()
commandArgs(TRUE)
?commandArgs
?basename
?normalizePath
cat(normalizePath(c(R.home(), tempdir())), sep = "\n")
opts_knit$set()
opts_knit()
opts_knit$set
opts_knit$set()
?knit
?message
message("ABC", "DEF")
Sys.getenv('USER')
?normalizePath
normalizePath('figure')
cyl <- 4
subscramble(mtcars, cyl == 4)
cyl <- sample(10, 100, rep = T)
subscramble(mtcars, cyl == 4)
library(devtools)
install_github('slidify', 'ramnathv')
slidify("2013-05-13-fun-with-rcharts.Rmd")
?knit
knit("2013-05-13-fun-with-rcharts.md")
knit("2013-05-13-fun-with-rcharts.md", 2013-05-13-fun-with-rcharts.html)
knit("2013-05-13-fun-with-rcharts.md", "2013-05-13-fun-with-rcharts.html")
setwd("~/Desktop/stack")
author("RCharts")
slidify("index.Rmd")
slidify("index.Rmd")
require(slidify) # dev version
slidify('index.Rmd')
system('open index.html')
setwd("~/Desktop/stack/rChartsParCoords")
require(slidify) # dev version
slidify('index.Rmd')
system('open index.html')
require(slidify) # dev version
slidify('index.Rmd')
system('open index.html')
?"%|%"
?normalizePath
opts_knit$set()
opts_knit$get()
path <- "E:/WORK/JFisher/Software/jfisher-usgs.github.com"
input <- file.path(path, "Rmd", "2012-07-03-knitr-jekyll.Rmd")
input
paste0("figs/", "/")
?wrap_rmd
?render_jekyll
opts_knit$get()
normalizePath("/")
basename(getwd())
path <- "~/Desktop/github/local/cpsievert.github.com/"
input <- file.path(path, "_source", "2012-07-03-knitr-jekyll.Rmd")
input
path <- "~/Desktop/github/local/cpsievert.github.com"
input <- file.path(path, "_source", "2012-07-03-knitr-jekyll.Rmd")
input
normalizePath("2013-05-15-hello-jekyll.Rmd")
?normalizePath
basename(input)
setwd("~/Desktop/github/local/cpsievert.github.com/_source")
path <- "~/Desktop/github/local/cpsievert.github.com"
input <- file.path(path, "_source", "2013-05-15-hello-jekyll.Rmd")
input
KnitPost <- function(input, baseUrl="/") {
opts_knit$set(base.url=baseUrl)
fig.path <- paste0("figs/", sub("\\.[Rr]md$", "", basename(input)), "/")
opts_chunk$set(fig.path=fig.path)
opts_chunk$set(fig.cap="center")
render_jekyll()
knit(input, paste('_posts/', base, '.md', sep = ''), envir=parent.frame())
}
library(knitr)
KnitPost(input)
KnitPost <- function(input, baseUrl="/") {
opts_knit$set(base.url=baseUrl)
base <- basename(input)
fig.path <- paste0("figs/", sub("\\.[Rr]md$", "", base), "/")
opts_chunk$set(fig.path=fig.path)
opts_chunk$set(fig.cap="center")
render_jekyll()
knit(input, paste('_posts/', base, '.md', sep = ''), envir=parent.frame())
}
KnitPost(input)
KnitPost <- function(input, baseUrl="/") {
opts_knit$set(base.url=baseUrl)
base <- sub("\\.[Rr]md$", "", basename(input))
fig.path <- paste0("figs/", base, "/")
opts_chunk$set(fig.path=fig.path)
opts_chunk$set(fig.cap="center")
render_jekyll()
knit(input, paste('_posts/', base, '.md', sep = ''), envir=parent.frame())
}
KnitPost(input)
setwd("~/Desktop/github/local/cpsievert.github.com/")
path <- "~/Desktop/github/local/cpsievert.github.com"
input <- file.path(path, "_source", "2013-05-15-hello-jekyll.Rmd")
KnitPost(input)
?knit
library(devtools)
install_github('KnitPost', 'cpsievert')
library(KnitPost)
library(knitPost)
KnitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
KnitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
library(knitPost)
KnitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
KnitPost <- function(post="2013-05-15-hello-jekyll.Rmd", baseUrl="/") {
sourcePath <- file.path(getwd(), "_source", post)
opts_knit$set(base.url=baseUrl)
base <- sub("\\.[Rr]md$", "", basename(sourcePath))
fig.path <- paste0("figs/", base, "/")
opts_chunk$set(fig.path=fig.path)
opts_chunk$set(fig.cap="center")
render_jekyll()
knit(input, paste('_posts/', base, '.md', sep = ''), envir=parent.frame())
}
KnitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
KnitPost <- function(post="2013-05-15-hello-jekyll.Rmd", baseUrl="/") {
sourcePath <- file.path(getwd(), "_source", post)
opts_knit$set(base.url=baseUrl)
base <- sub("\\.[Rr]md$", "", basename(sourcePath))
fig.path <- paste0("figs/", base, "/")
opts_chunk$set(fig.path=fig.path)
opts_chunk$set(fig.cap="center")
render_jekyll()
knit(sourcePath, paste('_posts/', base, '.md', sep = ''), envir=parent.frame())
}
KnitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
setwd("~/Desktop/github/local/knitPost")
document(".")
document(".")
knitPost <- function(post="2013-05-15-hello-jekyll.Rmd", baseUrl="http://cpsievert.github.com/") {
sourcePath <- file.path(getwd(), "_source", post)
opts_knit$set(base.url=baseUrl)
base <- sub("\\.[Rr]md$", "", basename(sourcePath))
fig.path <- paste0("figs/", base, "/")
opts_chunk$set(fig.path=fig.path)
opts_chunk$set(fig.cap="center")
render_jekyll()
knit(sourcePath, paste('_posts/', base, '.md', sep = ''), envir=parent.frame())
}
knitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
setwd("~/Desktop/github/local/cpsievert.github.com")
knitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
knitPost <- function(post="2013-05-15-hello-jekyll.Rmd", baseUrl="http://cpsievert.github.io/") {
sourcePath <- file.path(getwd(), "_source", post)
opts_knit$set(base.url=baseUrl)
base <- sub("\\.[Rr]md$", "", basename(sourcePath))
fig.path <- paste0("figs/", base, "/")
opts_chunk$set(fig.path=fig.path)
opts_chunk$set(fig.cap="center")
render_jekyll()
knit(sourcePath, paste('_posts/', base, '.md', sep = ''), envir=parent.frame())
}
knitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
knitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
knitPost <- function(post="2013-05-15-hello-jekyll.Rmd", baseUrl="/") {
sourcePath <- file.path(getwd(), "_source", post)
# why doesn't http://cpsievert.github.io work for a base.url????????
# maybe try http://raw.github.com/cpsievert/cpsievert.github.com/master/
opts_knit$set(base.url=baseUrl)
base <- sub("\\.[Rr]md$", "", basename(sourcePath))
fig.path <- paste0("figs/", base, "/")
opts_chunk$set(fig.path=fig.path)
opts_chunk$set(fig.cap="center")
render_jekyll()
knit(sourcePath, paste('_posts/', base, '.md', sep = ''), envir=parent.frame())
}
knitPost <- function(post="2013-05-15-hello-jekyll.Rmd", baseUrl="http://raw.github.com/cpsievert/cpsievert.github.com/master/") {
sourcePath <- file.path(getwd(), "_source", post)
# why doesn't http://cpsievert.github.io work for a base.url????????
# maybe try http://raw.github.com/cpsievert/cpsievert.github.com/master/
opts_knit$set(base.url=baseUrl)
base <- sub("\\.[Rr]md$", "", basename(sourcePath))
fig.path <- paste0("figs/", base, "/")
opts_chunk$set(fig.path=fig.path)
opts_chunk$set(fig.cap="center")
render_jekyll()
knit(sourcePath, paste('_posts/', base, '.md', sep = ''), envir=parent.frame())
}
knitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
knitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
knitPost <- function(post="2013-05-15-hello-jekyll.Rmd", baseUrl="http://raw.github.com/cpsievert/cpsievert.github.com/master/") {
sourcePath <- file.path(getwd(), "_source", post)
# why doesn't http://cpsievert.github.io work for a base.url????????
# maybe try http://raw.github.com/cpsievert/cpsievert.github.com/master/
base <- sub("\\.[Rr]md$", "", basename(sourcePath))
figPath <- paste0("figs/", base, "/")
cachePath <- paste0("cache/", base, "/")
opts_chunk$set(fig.path=figPath, cache.path=cachePath, fig.cap="center")
render_jekyll()
opts_knit$set(base.url=baseUrl)
knit(sourcePath, paste('_posts/', base, '.md', sep = ''), envir=parent.frame())
}
knitPost()
knitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
knit_hooks$get()
opts_knit$get()
knitPost <- function(post="2013-05-15-hello-jekyll.Rmd", baseUrl="http://raw.github.com/cpsievert/cpsievert.github.com/master/") {
sourcePath <- file.path(getwd(), "_source", post)
# why doesn't http://cpsievert.github.io work for a base.url????????
# maybe try http://raw.github.com/cpsievert/cpsievert.github.com/master/
# note: different base.urls works for figures but not animations could it be animation.fun???
base <- sub("\\.[Rr]md$", "", basename(sourcePath))
figPath <- paste0("figs/", base, "/")
cachePath <- paste0("cache/", base, "/")
opts_chunk$set(fig.path=figPath, cache.path=cachePath, fig.cap="center")
knit_hooks$set(webgl = hook_webgl)
opts_knit$set(base.url=baseUrl, animation.fun=hook_r2swf)
render_jekyll()
wrap_rmd(f, width = 100)  # reflow long lines in Rmd
knit(sourcePath, paste('_posts/', base, '.md', sep = ''), envir=parent.frame())
}
knitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
knitPost <- function(post="2013-05-15-hello-jekyll.Rmd", baseUrl="http://raw.github.com/cpsievert/cpsievert.github.com/master/") {
sourcePath <- file.path(getwd(), "_source", post)
# why doesn't http://cpsievert.github.io work for a base.url????????
# maybe try http://raw.github.com/cpsievert/cpsievert.github.com/master/
# note: different base.urls works for figures but not animations could it be animation.fun???
base <- sub("\\.[Rr]md$", "", basename(sourcePath))
figPath <- paste0("figs/", base, "/")
cachePath <- paste0("cache/", base, "/")
opts_chunk$set(fig.path=figPath, cache.path=cachePath, fig.cap="center")
knit_hooks$set(webgl = hook_webgl)
opts_knit$set(base.url=baseUrl, animation.fun=hook_r2swf)
render_jekyll()
#wrap_rmd(f, width = 100)  # reflow long lines in Rmd
knit(sourcePath, paste('_posts/', base, '.md', sep = ''), envir=parent.frame())
}
knitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
knitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
knitPost <- function(post="2013-05-15-hello-jekyll.Rmd", baseUrl="/") {
sourcePath <- file.path(getwd(), "_source", post)
# why doesn't http://cpsievert.github.io work for a base.url????????
# maybe try http://raw.github.com/cpsievert/cpsievert.github.com/master/
# note: different base.urls works for figures but not animations could it be animation.fun???
base <- sub("\\.[Rr]md$", "", basename(sourcePath))
figPath <- paste0("figs/", base, "/")
cachePath <- paste0("cache/", base, "/")
opts_chunk$set(fig.path=figPath, cache.path=cachePath, fig.cap="center")
knit_hooks$set(webgl = hook_webgl)
opts_knit$set(base.url=baseUrl, animation.fun=hook_scianimator)
render_jekyll()
#wrap_rmd(f, width = 100)  # reflow long lines in Rmd
knit(sourcePath, paste('_posts/', base, '.md', sep = ''), envir=parent.frame())
}
knitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
knitPost <- function(post="2013-05-15-hello-jekyll.Rmd", baseUrl="/") {
sourcePath <- file.path(getwd(), "_source", post)
# why doesn't http://cpsievert.github.io work for a base.url????????
# maybe try http://raw.github.com/cpsievert/cpsievert.github.com/master/
# note: different base.urls works for figures but not animations could it be animation.fun???
base <- sub("\\.[Rr]md$", "", basename(sourcePath))
figPath <- paste0("figs/", base, "/")
cachePath <- paste0("cache/", base, "/")
opts_chunk$set(fig.path=figPath, cache.path=cachePath, fig.cap="center")
render_jekyll()
#wrap_rmd(f, width = 100)  # reflow long lines in Rmd
knit(sourcePath, paste('_posts/', base, '.md', sep = ''), envir=parent.frame())
}
knitPost("2013-05-15-yu-darvishs-deception-factor.Rmd")
names(pitches)
library(rgl)
snaps <- getSnapshots(pitches, interval = 0.01)
types <- as.character(pitches[,"pitch_type"])
ncolors <- length(unique(types))
pal <- terrain.colors(ncolors)
full.pal <- factor(types)
levels(full.pal) <- pal
spheres3d(x=as.vector(snaps[,,1]), y=as.vector(snaps[,,2]), z=as.vector(snaps[,,3]),
xlab="Horizontal Axis", ylab="Distance from Home Plate", zlab="Height From Ground",
col=as.character(full.pal), radius=.12)
axes3d(c('x', 'y', 'z'))
title3d(xlab='Horizontal Axis', ylab='Distance from Home Plate', zlab='Height From Ground')
